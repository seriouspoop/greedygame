// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: campaign.sql

package schema

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getCampaignFromCIDs = `-- name: GetCampaignFromCIDs :many
SELECT cid, name, image, cta, status, created_at, updated_at FROM campaign 
WHERE cid = ANY($1::UUID[])
`

func (q *Queries) GetCampaignFromCIDs(ctx context.Context, cids []pgtype.UUID) ([]Campaign, error) {
	rows, err := q.db.Query(ctx, getCampaignFromCIDs, cids)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Campaign
	for rows.Next() {
		var i Campaign
		if err := rows.Scan(
			&i.Cid,
			&i.Name,
			&i.Image,
			&i.Cta,
			&i.Status,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
