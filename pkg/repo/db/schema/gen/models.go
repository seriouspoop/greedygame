// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package schema

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type CampaignStatus string

const (
	CampaignStatusActive   CampaignStatus = "active"
	CampaignStatusInactive CampaignStatus = "inactive"
)

func (e *CampaignStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = CampaignStatus(s)
	case string:
		*e = CampaignStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for CampaignStatus: %T", src)
	}
	return nil
}

type NullCampaignStatus struct {
	CampaignStatus CampaignStatus
	Valid          bool // Valid is true if CampaignStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullCampaignStatus) Scan(value interface{}) error {
	if value == nil {
		ns.CampaignStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.CampaignStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullCampaignStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.CampaignStatus), nil
}

type Campaign struct {
	Cid       pgtype.UUID
	Name      string
	Image     string
	Cta       string
	Status    CampaignStatus
	CreatedAt pgtype.Timestamptz
	UpdatedAt pgtype.Timestamptz
}

type TargetingRule struct {
	Cid            pgtype.UUID
	AppInclude     []string
	AppExclude     []string
	CountryInclude []string
	CountryExclude []string
	OsInclude      []string
	OsExclude      []string
	CreatedAt      pgtype.Timestamptz
	UpdatedAt      pgtype.Timestamptz
}
